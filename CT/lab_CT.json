{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/kit-data-manager/Metadata-Schemas-for-Materials-Science/main/CT/lab_CT.json",
  "type": "object",
  "description": "This JSON Schema describes a nano or micro - computed tomography (CT) measurement done using the instrumentation in a lab using an x-ray tube as a source. The same schema can also be used for an SEM based CT measurement where the x-rays emitted by a material upon interaction with the electron beam from the electron microscope, are used for generating CT images of a sample. For synchrotron based CT, use the synchrotron CT schema provided separately in the same folder as this schema. The cardinality (required or optional) of all metadata is defined and wherever possible a list of controlled vocabularies is provided. Contributors (in alphabetical order of last names): Alexey Boubnov, Rafaela Debastiani, Jonas Fell, Sarah Irvine, Reetu Elza Joseph",
  "properties": {
    "entry": {
      "$ref": "#/$defs/entry"
    }
  },
  "required": [
    "entry"
  ],
  "title": "lab_CT",
  "$defs": {
    "entry": {
      "type": "object",
      "description": "Required) - The entry level is the root element of the schema. It contains all the metadata describing a CT measurement.",
      "additionalProperties": false,
      "properties": {
        "entryID": {
          "$ref": "#/$defs/identifier",
          "description": "entryID (Optional) - Identifier of the metadata entry usually provided by the project or the laboratory"
        },
        "experimentID": {
          "$ref": "#/$defs/identifier",
          "description": "entryID (Optional) - Identifier of the measurement usually provided by the project or the laboratory"
        },
        "title": {
          "type": "string",
          "description": "(Required) - Extended title of the measurement"
        },
        "startTime": {
          "type": "string",
          "description": "(Required) - Start time of the measurement in the ISO 8601 format CCYY-MM-DDThh:mm:ss.sss",
          "format": "date-time",
          "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z)$"
        },
        "endTime": {
          "type": "string",
          "description": "(Required) - End time of the measurement in the ISO 8601 format CCYY-MM-DDThh:mm:ss.sss",
          "format": "date-time",
          "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z)$"
        },
        "definition": {
          "type": "string",
          "description": "(Optional) - Name of the schema to which this entry conforms. In this case, lab_CT should be written"
        },
        "program": {
          "$ref": "#/$defs/program",
          "description": "(Required) - Details concerning the program (or software) used for aquisition"
        },
        "revision": {
          "$ref": "#/$defs/revision",
          "description": "(Optional) - Details concerning any revision to the document due to e.g. re-calibration, reprocessing, new analysis, new instrument definition format"
        },
        "user": {
          "$ref": "https://raw.githubusercontent.com/kit-data-manager/Metadata-Schemas-for-Materials-Science/main/user_description.json",
          "description": "(Required)- The contact information of the user responsible for the measurement"
        },
        "sample": {
          "$ref": "#/$defs/sample",
          "description": "(Required)- Details concerning the sample"
        },
        "measurementConditions": {
          "$ref": "#/$defs/measurementConditions",
          "description": "(Optional)- Details concerning the measurement conditions like details of in situ cell, temperature and gas enviroment and pressure"
        },
        "instrument": {
          "$ref": "#/$defs/instrumentDetails",
          "description": "(Required)- Details concerning the instrument settings"
        }
      },
      "required": [
        "title",
        "startTime",
        "endTime",
        "program",
        "user",
        "instrument",
        "data"
      ]
    },
    "identifier": {
      "type": "object",
      "description": "(Optional) - Details of an identifier element.",
      "additionalProperties": false,
      "properties": {
        "identifierValue": {
          "type": "string",
          "description": "(Optional) - String containing the value of an identifier"
        },
        "identifierType": {
          "type": "string",
          "description": "(Optional) - Type of the identifier to be selected from: *ROR *GRID *ISNI *URL *DOI *Handle",
          "enum": [
            "ROR",
            "GRID",
            "ISNI",
            "URL",
            "DOI",
            "Handle"
          ]
        }
      }
    },
    "program": {
      "type": "object",
      "description": "(Optional) - Details concerning the program (or software) used for aquisition.",
      "additionalProperties": false,
      "properties": {
        "programName": {
          "type": "string",
          "description": "(Optional) - Name of the program (or software) used for acquisition"
        },
        "programVersion": {
          "type": "string",
          "description": "(Optional) - Program (or software) version number"
        }
      }
    },
    "revision": {
      "type": "object",
      "additionalProperties": false,
      "description": "(Optional) - Details concerning any revision to the document due to e.g. re-calibration, reprocessing, new analysis, new instrument definition format.",
      "properties": {
        "revisonID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier of the file"
        },
        "revisionComment": {
          "type": "string",
          "description": "(Optional)- Any comments to the revision"
        }
      }
    },
    "institutionDetails": {
      "type": "object",
      "additionalProperties": false,
      "description": "(Optional) - Details of the institution to which the user is affiliated.",
      "properties": {
        "institutionName": {
          "type": "string",
          "description": "(Optional) - Full name of the institution"
        },
        "institutionAcronym": {
          "type": "string",
          "description": "(Recommended) - Acronym of the institution"
        },
        "institutionDepartment": {
          "type": "string",
          "description": "(Optional) - Department within an institution"
        },
        "institutionID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier pertaining to the institution (e.g. ROR)"
        }
      }
    },
    "sample": {
      "type": "object",
      "additionalProperties": false,
      "description": "(Required) - Details concerning the sample.",
      "properties": {
        "sampleName": {
          "type": "string",
          "description": "(Optional) - Name of the sample"
        },
        "sampleID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier for the sample"
        },
        "sampleForm": {
          "type": "string",
          "description": "(Optional) - Description of the sample form (e.g., bulk, nanostructured, powder, pellet)"
        },
        "sampleSize": {
          "$ref": "#/$defs/distanceDetails",
          "description": "(Optional) - Size of the sample"
        },
        "sampleWeight": {
          "$ref": "#/$defs/weightDetails",
          "description": "(Optional) - Weight of the sample"
        },
        "sampleHolder": {
          "type": "string",
          "description": "(Optional) - Type of sample holder used"
        },
        "storageConditions": {
          "type": "string",
          "description": "(Optional) - Environment conditions in which the sample has to be stored before and after the measurement (e.g., nitrogen atmosphere, hermetically sealed, controlled temperature and pressure).",
          "default": "Ambient, dry environment"
        },
        "samplePreparation": {
          "$ref": "#/$defs/samplePrepType",
          "description": "(Optional) - Details pertaining to the sample prepapration like date, ID, etc"
        }
      }
    },
    "measurementConditions": {
      "type": "object",
      "description": "(Optional) - Details concerning the measurement conditions like details of in situ cell, temperature and gas enviroment and pressure.",
      "additionalProperties": false,
      "properties": {
        "sampleEnvironment": {
          "type": "object",
          "description": "Details concerning the measurement conditions specific to the sample as opposed to the ambient conditions.",
          "properties": {
            "inSituCellType": {
              "type": "string",
              "description": "(Optional) - The type of the in situ cell used, which is to be selected from a controlled list (enum). Based on the selected in situ cell type, the corresponding cell details can be populated or identified by other applications using the schema.",
              "enum": [
                "load frame",
                "furnace",
                "humidification cell",
                "corrosion cell",
                "cooling cell",
                "micro manipulator",
                "batch cell",
                "flow cell",
                "bio reactor",
                "degradation cell",
                "vacuum chamber"
              ]
            },
            "loadFrame": {
              "type": "object",
              "description": "(Optional) - Details about a load frame which is a high stiffness support structure used to apply different types of test forces on the sample.",
              "additionalProperties": false,
              "properties": {
                "loadFrameName": {
                  "type": "string",
                  "description": "(Optional) - Name of the load frame."
                },
                "loadFrameManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the load frame."
                },
                "anvil": {
                  "type": "string",
                  "description": "(Optional) - The type of anvil used in the in situ load frame (stage) for applying a particular type of force on the sample. Option to be selected from a controlled list consisting of - Compression, Diamond indentation 90° cone, Diamond indentation cube corner, Diamond indentation wedge, Tension, Other. If 'Other' is selected, specify the name of the anvil with a description in the field 'otherAnvil'.",
                  "enum": [
                    "Compression",
                    "Diamond indentation 90° cone",
                    "Diamond indentation cube corner",
                    "Diamond indentation wedge",
                    "Tension",
                    "Other"
                  ]
                },
                "otherAnvil": {
                  "type": "string",
                  "description": "(Optional) - If 'anvil' was selected as 'Other' from the controlled list as it was not listed, please specify the name of the anvil with a description in this field."
                },
                "maximumDisplacement": {
                  "$ref": "#/$defs/distanceDetails",
                  "description": "(Optional) - The maximum displacement allowed in the selected configuration. Typical unit - µm."
                },
                "displacement": {
                  "type": "object",
                  "description": "(Optional) - Specification on how displacement is applied on the sample. Either 'displacementRate' in µm/min or 'displacementIncrement' in µm/acquisition need to be selected.",
                  "additionalProperties": false,
                  "properties": {
                    "displacementRate": {
                      "type": "number",
                      "description": "(Optional) - The rate at which displacement is applied on the sample in µm/min."
                    },
                    "displacementIncrement": {
                      "type": "number",
                      "description": "(Optional) - The step at which displacement is changed per acquisition in µm/acquisition."
                    }
                  }
                },
                "maximumForce": {
                  "type": "number",
                  "description": "(Optional) - The maximum force that can be applied to the sample in N."
                },
                "rotationRange": {
                  "type": "object",
                  "description": "(Optional) - The range of rotation of the sample during the CT with the load frame (stage) to be specified as startAngle and endAngle. Typical unit - degree.",
                  "additionalProperties": false,
                  "properties": {
                    "startAngle": {
                      "$ref": "#/$defs/angleDetails",
                      "description": "(Required) - Start angle of the range of rotation of the sample during the CT with the load frame (stage). If the range is -70°/70°, then startAngle is -70°. Note that, this parameter can be different from the minimum possible angle of rotation of the sample. Typical unit - degree."
                    },
                    "endAngle": {
                      "$ref": "#/$defs/angleDetails",
                      "description": "(Required) - End angle of the range of rotation of the sample during the CT with the load frame (stage). If the range is -70°/70°, then endAngle is 70°. Note that, this parameter can be different from the maximum possible angle of rotation of the sample. Typical unit - degree."
                    }
                  }
                },
                "loadFrameDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the load frame relevant for the measurement."
                }
              }
            },
            "furnace": {
              "type": "object",
              "description": "(Optional) - Details about a furnace used to heat the sample or to keep it at a particular temperature.",
              "additionalProperties": false,
              "properties": {
                "furnaceName": {
                  "type": "string",
                  "description": "(Optional) - Name of the furnace."
                },
                "furnaceManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the furnace."
                },
                "furnaceDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the furnace relevant for the measurement."
                },
                "setPointTemperature": {
                  "description": "(Required) - Final Temperature or temperature at which the furnace is to be maintained.",
                  "$ref": "#/$defs/temperatureDetails"
                },
                "ramp": {
                  "description": "(Optional) - The rate at which temperature is increased, typically in K/min.",
                  "$ref": "#/$defs/rampDetails"
                }
              },
              "required": [
                "setPointTemperature"
              ]
            },
            "humidificationCell": {
              "type": "object",
              "description": "(Optional) - Details about a humidification cell used to keep the sample in a controlled humid environment.",
              "additionalProperties": false,
              "properties": {
                "cellName": {
                  "type": "string",
                  "description": "(Optional) - Name of the humidification cell."
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the humidification cell."
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the humidification cell relevant for the measurement."
                }
              }
            },
            "corrosionCell": {
              "type": "object",
              "description": "(Optional) - Details about a corrosion cell used to expose the sample to a controlled corrosive environment.",
              "additionalProperties": false,
              "properties": {
                "corrosionCelltype": {
                  "description": "(Required) - Type of the corrosion cell based on the environment inside - liquid or gas.",
                  "type": "string",
                  "enum": [
                    "liquid",
                    "gas"
                  ]
                },
                "cellName": {
                  "type": "string",
                  "description": "(Optional) - Name of the corrosion cell."
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the corrosion cell."
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the corrosion cell relevant for the measurement."
                },
                "pHValue": {
                  "type": "number",
                  "description": "(Optional) - The pH value maintained in the in situ cell."
                },
                "pHDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the pH in the in situ cell."
                }
              },
              "required": [
                "corrosionCelltype"
              ]
            },
            "coolingCell": {
              "type": "object",
              "description": "(Optional) - Details about a cocooling cell used to cool the sample to a lower temperature.",
              "additionalProperties": false,
              "properties": {
                "coolingTemperature": {
                  "description": "(Required) - Final Temperature or temperature at which the cooling furnace is to be maintained.",
                  "$ref": "#/$defs/temperatureDetails"
                },
                "ramp": {
                  "description": "(Optional) - The rate at which temperature is decreased. Typical unit - K/min.",
                  "$ref": "#/$defs/rampDetails"
                },
                "cellName": {
                  "type": "string",
                  "description": "(Optional) - Name of the cooling cell."
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the cooling cell."
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the cooling cell relevant for the measurement."
                }
              },
              "required": [
                "coolingTemperature"
              ]
            },
            "micromanipulator": {
              "type": "object",
              "description": "(Optional) - Details about a micromanipulator used to work with the sample during the measurement.",
              "additionalProperties": false,
              "properties": {
                "micromanipulatorName": {
                  "description": "(Optional) - Name of the micromanipulator.",
                  "type": "string"
                },
                "micromanipulatorManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the micromanipulator."
                },
                "micromanipulatorDetails": {
                  "description": "(Required) - Details about the micromanipulator relevant for the measurement."
                }
              },
              "required": [
                "micromanipulatorDetails"
              ]
            },
            "batchCell": {
              "type": "object",
              "description": "(Optional) - Details about an in situ batch cell.",
              "additionalProperties": false,
              "properties": {
                "cellName": {
                  "description": "(Optional) - Name of the batch cell",
                  "type": "string"
                },
                "batchCellType": {
                  "description": "(Required) - Type of the batch cell - liquid or gas.",
                  "type": "string",
                  "enum": [
                    "liquid",
                    "gas"
                  ]
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the batch cell."
                },
                "medium": {
                  "description": "(Required) - Name of the liquid of gas used in the batch cell.",
                  "type": "string"
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the batch cell relevant for the measurement."
                },
                "pHValue": {
                  "type": "number",
                  "description": "(Optional) - The pH value maintained in the in situ cell."
                },
                "pHDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the pH in the in situ cell."
                }
              },
              "required": [
                "medium",
                "batchCellType"
              ]
            },
            "bioReactor": {
              "type": "object",
              "description": "(Optional) - Details of an in situ bioreactor.",
              "additionalProperties": false,
              "properties": {
                "pHValue": {
                  "type": "number",
                  "description": "(Required) - The pH value maintained in the in situ cell."
                },
                "pHDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the pH in the in situ cell."
                },
                "sterileConditions": {
                  "type": "boolean",
                  "description": "(Optional) - To be set to true if the sample has to be handled in sterile conditions."
                }
              },
              "required": [
                "pHValue"
              ]
            },
            "flowCell": {
              "type": "object",
              "description": "(Optional) - Details about an in situ flow cell.",
              "additionalProperties": false,
              "properties": {
                "cellName": {
                  "type": "string",
                  "description": "(Optional) - Name of the flow cell."
                },
                "flowCellType": {
                  "description": "(Required) - Type of the flow cell - liquid or gas.",
                  "type": "string",
                  "enum": [
                    "liquid",
                    "gas"
                  ]
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the flow cell."
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the flow cell relevant for the measurement."
                },
                "flowRate": {
                  "description": "(Required) - Rate of flow of the liquid or gas in the flow cell.",
                  "$ref": "#/$defs/flowRateDetails"
                },
                "flowComposition": {
                  "description": "(Required) - Composition of the gas or liquid in the flow cell.",
                  "type": "string"
                },
                "pHValue": {
                  "type": "number",
                  "description": "(Optional) - The pH value maintained in the in situ cell."
                },
                "pHDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the pH in the in situ cell."
                }
              },
              "required": [
                "flowRate",
                "flowComposition",
                "flowCellType"
              ]
            },
            "mediumSpecification": {
              "type": "string",
              "description": "(Optional) - Specification or details of the medium of the in situ cell relevant for the measurement. "
            },
            "degradationCell": {
              "description": "(Optional) - Details regarding a degradation cell relevant for the measurement.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "cellName": {
                  "type": "string",
                  "description": "(Optional) - Name of the degradation cell."
                },
                "cellManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the degradation cell."
                },
                "cellDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the degradation cell relevant for the measurement."
                },
                "pHValue": {
                  "type": "number",
                  "description": "(Optional) - The pH value maintained in the in situ cell."
                },
                "pHDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the pH in the in situ cell."
                }
              }
            },
            "vacuumChamber": {
              "description": "(Optional) - Details regarding a degradation cell relevant for the measurement.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "chamberName": {
                  "type": "string",
                  "description": "(Optional) - Name of the degradation cell."
                },
                "chamberManufacturer": {
                  "$ref": "#/$defs/manufacturerDetails",
                  "description": "(Optional) - Details about the manufacturer or vendor of the degradation cell."
                },
                "chamberDetails": {
                  "type": "string",
                  "description": "(Optional) - Additional details about the degradation cell relevant for the measurement."
                },
                "pressure": {
                  "$ref": "#/$defs/pressureDetails",
                  "description": "(Required)- Details of the pressure maintained in the vacuum chamber."
                }
              },
              "required": [
                "pressure"
              ]
            }
          }
        },
        "roomTemperature": {
          "description": "(Optional) - Details about the room temperature in the lab.",
          "$ref": "#/$defs/temperatureDetails"
        },
        "ambientPressure": {
          "description": "(Optional) - Details about the ambient pressure in the lab.",
          "$ref": "#/$defs/pressureDetails"
        },
        "roomHumidity": {
          "description": "(Optional) - Details about the humidity in the lab expressed in percentage.",
          "type": "number",
          "maximum": 100,
          "minimum": 0
        }
      }
    },
    "flowRateDetails": {
      "type": "object",
      "description": "(Optional) - Describes the rate (volume/  time) of a flow.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the rate of flow (volume/unit time)."
        },
        "unit": {
          "type": "string",
          "description": "(Required) - Unit of the value to be selected from a controlled list (mL/min, µL/min, cm3/min ( or cc/min) default value - cm3/min).",
          "default": "mm",
          "enum": [
            "cm3/min",
            "mL/min",
            "µL/min"
          ]
        },
        "qualifier": {
          "type": "string",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max).",
          "default": "max"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty of the value. Allows to specify whether the uncertainty is absolute or relative."
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value."
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "distanceDetails": {
      "type": "object",
      "description": "(Optional) - Describes a distance, size or length.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the distance, size or length"
        },
        "unit": {
          "type": "string",
          "description": "(Required) - Unit of the value to be selected from a controlled list (fm, pm, nm, µm, mm, cm, m, default value - mm)",
          "default": "mm",
          "enum": [
            "fm",
            "pm",
            "nm",
            "µm",
            "mm",
            "cm",
            "m"
          ]
        },
        "qualifier": {
          "type": "string",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max)",
          "default": "max"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty of the value. Allows to specify whether the uncertainty is absolute or relative"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "uncertaintyDetails": {
      "type": "object",
      "description": "(Optional) - Uncertainty of the value. Allows to specify whether the uncertainty is absolute or relative. Properties: type (Required) - Type of the uncertainty to be chosen between absolute or relative, value (Required) - value of the uncertainty",
      "additionalProperties": false,
      "properties": {
        "uncertaintyType": {
          "type": "string",
          "description": "(Required) - Type of the uncertainty to be chosen between absolute or relative",
          "enum": [
            "absolute",
            "relative"
          ]
        },
        "value": {
          "type": "number",
          "description": "(Required) - Value of the uncertainty"
        }
      },
      "required": [
        "uncertaintyType",
        "value"
      ]
    },
    "weightDetails": {
      "type": "object",
      "description": "(Optional) - Describes a weight.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the weight"
        },
        "unit": {
          "type": "string",
          "description": "(Required) - Unit of the value to be selected from a controlled list (ng, µg, mg, g, kg, default value - ug)",
          "default": "µg",
          "enum": [
            "ng",
            "µg",
            "mg",
            "g",
            "kg"
          ]
        },
        "qualifier": {
          "type": "string",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max)",
          "default": "max"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty of the value. Allows to specify whether the uncertainty is absolute or relative"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "samplePrepType": {
      "type": "object",
      "description": "(Optional) - Describes the sample preparation process.",
      "additionalProperties": false,
      "properties": {
        "preparationDate": {
          "type": "string",
          "description": "(Optional) - Date of the sample preparation in the ISO 8601 format.",
          "format": "date"
        },
        "preparationDescription": {
          "type": "string",
          "description": "(Optional) - Short description of the sample preparation."
        },
        "preparationID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier of the sample preparation."
        }
      }
    },
    "instrumentDetails": {
      "type": "object",
      "additionalProperties": false,
      "description": "(Required) - Details giving the relevant components and settings of the instrument.",
      "properties": {
        "instrumentName": {
          "type": "string",
          "description": "(Required) - Name of the instrument."
        },
        "instrumentID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier of the instrument."
        },
        "instrumentManufacturer": {
          "$ref": "#/$defs/manufacturerDetails",
          "description": "(Required) - Details about the manufacturer or vendor of the instrument"
        },
        "instrumentType": {
          "type": "string",
          "description": "(Required) - Type of the instrument used for CT - Regular Lab-CT or SEM based CT. Applications working with the schema can then enable selected fields based on this choice.",
          "enum": [
            "Regular Lab-CT",
            "SEM based CT"
          ]
        },
        "source": {
          "type": "object",
          "description": "(Required) - Details regarding the X-ray source, separated in two groups - regular Lab CT and SEM based CT.",
          "additionalProperties": false,
          "properties": {
            "regularLabCT": {
              "description": "(Optional) - Details regarding the X-ray source in a lab scale CT instrument",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "tubeName": {
                  "description": "(Optional) - Name of the X-ray tube.",
                  "type": "string"
                },
                "tubeID": {
                  "description": "(Optional) - Identifier of the X-ray tube.",
                  "$ref": "#/$defs/identifier"
                },
                "tubeManufacturer": {
                  "description": "(Optional) - Details regarding the manufacturer of the X-ray tube.",
                  "$ref": "#/$defs/manufacturerDetails"
                },
                "cathode": {
                  "description": "(Optional) - Details regarding the cathode of the X-ray tube",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "cathodeMaterial": {
                      "type": "string",
                      "description": "(Optional) - Material with which the cathode is made. e.g. - tungsten (W)"
                    },
                    "cathodeDetails": {
                      "type": "string",
                      "description": "(Optional) - Additional details regarding the cathode relevant for the measurement."
                    }
                  }
                },
                "PowerOrCurrentSetting": {
                  "description": "(Required) - The power or current setiing set on the X-ray tube. Depending on the manufacturer either one of power or current can be set and one of these values is required.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "power": {
                      "description": "(Optional) - Power set in the X-ray source. Default unit - W.",
                      "$ref": "#/$defs/powerDetails"
                    },
                    "current": {
                      "description": "(Optional) - Current set in the X-ray source (Tube Current). Default unit - µA.",
                      "$ref": "#/$defs/currentDetails"
                    }
                  }
                },
                "voltage": {
                  "description": "(Optional) - Voltage set in the X-ray source (Tube Voltage)Please specify in the notes if peak kilovoltage(kVp) is only known instead of tube voltage. Default unit - kV.",
                  "$ref": "#/$defs/voltageDetails"
                },
                "xrayEnergySpectrum": {
                  "description": "(Required) - Details regarding the X-ray enrgy spectrum like chromaticity, characteristic line, filters used, etc.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "chromaticity": {
                      "description": "(Required) - Describes if the x-rays are monochromatic or polychromatic. Default value is polychromatic.",
                      "type": "string",
                      "enum": [
                        "monochromatic",
                        "polychromatic"
                      ],
                      "default": "polychromatic"
                    },
                    "xrayCharacteristicLine": {
                      "description": "(Required) - Describes the characteristic line of the X-ray spectrum. e.g.- Cr K alpha, W K alpha.",
                      "type": "string"
                    },
                    "xrayCharacteristicEnergy": {
                      "description": "(Required) - Describes the characteristic energy of the X-ray spectrum. Default unit - keV.",
                      "$ref": "#/$defs/energyDetails"
                    },
                    "energyFilter": {
                      "description": "(Required) - Description of the filter(s) used. If no energy filter is used, the material of the primary energy filter is to be set as none/air.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "filter1": {
                          "description": "(Required) - Description of the primary energy filter. When no filter is used, the material of the primary energy filter is to be set as none/air.",
                          "type": "object",
                          "properties": {
                            "filterMaterial": {
                              "type": "string",
                              "default": "none/air",
                              "description": "(Required) - Material of the primary energy filter. default - none/air."
                            },
                            "filterThickness": {
                              "description": "(Optional) - Thickness of the primary energy filter.",
                              "$ref": "#/$defs/distanceDetails"
                            }
                          },
                          "required": [
                            "filterMaterial"
                          ]
                        },
                        "filter2": {
                          "description": "(Optional) - Description of a second energy filter used in addition to the primary energy filter. ",
                          "type": "object",
                          "properties": {
                            "filterMaterial": {
                              "type": "string",
                              "description": "(Optional) - Material of the additional energy filter."
                            },
                            "filterThickness": {
                              "description": "(Optional) - Thickness of the additional energy filter.",
                              "$ref": "#/$defs/distanceDetails"
                            }
                          }
                        },
                        "comments": {
                          "type": "string",
                          "description": "(Optional) - Additional comments to include relevant information for the measurement. Sometimes energy filter specifications are confidential, in this case, this field can be used to give the link to the list of energy filters provided by the manufacturer."
                        }
                      },
                      "required": [
                        "filter1"
                      ]
                    }
                  },
                  "required": [
                    "chromaticity",
                    "xrayCharacteristicLine",
                    "xrayCharacteristicEnergy",
                    "energyFilter"
                  ]
                },
                "anode": {
                  "description": "(Optional) - Details about the anode.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "anodeType": {
                      "type": "string",
                      "description": "(Optional) - Type of anode in the X-ray tube. e.g. - rotating anode, liquid jet anode, etc."
                    },
                    "anodeMaterial": {
                      "type": "string",
                      "description": "(Optional) - Material of the anode. e.g. - Cr."
                    },
                    "targetCurrent": {
                      "$ref": "#/$defs/currentDetails",
                      "description": "(Optional) - the current measured at the X-ray target, defined separately as currentDetails (includes the current value, optional uncertainty, optional qualifier like max or min, optional note of the type string, and a controlled list of units from which one can be chosen - pA, nA, uA, mA, A, kA)"
                    }
                  }
                },
                "sourceDrift": {
                  "description": "(Optional) - Distance by which the source is shifted during the measurement (i.e., end position - start position).",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "xDrift": {
                      "description": "(Required) - Drift in the x direction. Typical unit - µm.",
                      "$ref": "#/$defs/distanceDetails"
                    },
                    "yDrift": {
                      "description": "(Required) - Drift in the y direction. Typical unit - µm.",
                      "$ref": "#/$defs/distanceDetails"
                    }
                  },
                  "required": [
                    "xDrift",
                    "yDrift"
                  ]
                },
                "sourcePositions": {
                  "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the source.",
                  "$ref": "#/$defs/motorPositions"
                }
              },
              "required": [
                "PowerOrCurrentSetting",
                "voltage",
                "xrayEnergySpectrum"
              ]
            },
            "SEMBasedCT": {
              "description": "(Optional) - Details regarding the E-Beam source and X-ray target in an SEM based CT set-up.",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "chamberPressure": {
                  "$ref": "#/$defs/pressureDetails",
                  "description": "(Required) - Details of the pressure maintained in the chamber of the SEM."
                },
                "electronBeamShift": {
                  "description": "(Required) - The distance by which the electron beam is shifted in the x and y directions.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "xShift": {
                      "description": "(Required) - Beam shift in the x direction. Typical unit - µm.",
                      "$ref": "#/$defs/distanceDetails"
                    },
                    "yShift": {
                      "description": "(Required) - Beam shift in the y direction. Typical unit - µm.",
                      "$ref": "#/$defs/distanceDetails"
                    }
                  },
                  "required": [
                    "xShift",
                    "yShift"
                  ]
                },
                "workingDistance": {
                  "$ref": "#/$defs/distanceDetails",
                  "description": "(Required)- Distance which is determined along the optical axis within the column from  (1) the lower end of the final optical element between the source and the  specimen stage; to (2) the point where the beam is focused. In SEM based CT, the beam is focussed on the target material which emits the X-rays upon interaction with the electrons. Default unit - µm."
                },
                "objectiveLensAperture": {
                  "$ref": "#/$defs/apertureSettingType",
                  "description": "(Required) - The setting for controlling the aperture size, using either the aperture size (directly) or the beam current (indirectly). Typically the diameter of the aperture is set in µm."
                },
                "electronProbeCurrent": {
                  "$ref": "#/$defs/currentDetails",
                  "description": "(Required) - The electron current measured at the probe. Typical unit - µA."
                },
                "target": {
                  "type": "object",
                  "description": "(Required) - Details regarding the target in SEM based CT, which upon interaction with the e-beam produces the X-rays.",
                  "additionalProperties": false,
                  "properties": {
                    "targetShape": {
                      "type": "string",
                      "description": "(Optional) - Description of the shape or geometry of the target. e.g. - bulk, foil, needle."
                    },
                    "targetMaterial": {
                      "type": "string",
                      "description": "(Required) - Material with which the target is made."
                    },
                    "targetThickness": {
                      "$ref": "#/$defs/distanceDetails",
                      "description": "(Required)- Thickness of the target (dimension in Z direction). Default unit - µm."
                    },
                    "targetDriftCorrection": {
                      "type": "boolean",
                      "description": "(Required) - If drift correction is activated for the target, this parameter has to be set to true."
                    },
                    "targetTiltAngle": {
                      "$ref": "#/$defs/angleDetails",
                      "description": "(Required) - angle by which the target is tilted. Typical unit - degree."
                    }
                  },
                  "required": [
                    "targetMaterial",
                    "targetThickness",
                    "targetDriftCorrection",
                    "targetTiltAngle",
                    "targetCurrent"
                  ]
                }
              },
              "required": [
                "chamberPressure",
                "electronBeamShift",
                "workingDistance",
                "objectiveLensAperture",
                "electronProbeCurrent",
                "target"
              ]
            }
          }
        },
        "focalSpotMode": {
          "type":"object",
          "description":"(Optional) - Option for setting the size of the focal spot. Some sources have the option to select the target spot size, or focal spot size absolutely by setting a value, while some others give the option of selecting 'small', 'medium' or 'large'. Smaller spot size = higher resolution.  Note that the power/current will change with this value. In addition, the detector settings will usually be selected in conjunction. (different scintillator/lens/magnification).",
          "additionalProperties":false,
          "properties":{
            "selection":{
              "type":"string",
              "description":"(Optional) - Selection of the setting of the size of the focal spot when the option for setting the size of the focal spot by selecting 'small', 'medium' or 'large' according to predefined values set by the manufacturer.",
              "enum":[
                "small",
                "medium",
                "large"
              ]
            },
            "size":{
              "$ref": "#/$defs/distanceDetails",
              "description": "(Optional) - Size of the target spot when the option for setting the size of the focal spot absolutely by setting a value is available."
            }
          }
        },
        "optics": {
          "$ref": "#/$defs/optics",
          "description": "(Optional) - Details about the optics and individual motor positions."
        },
        "calibration": {
          "type":"object",
          "description":"(Optional) - Details regarding the calibration and the scaling factor.",
          "additionalProperties":false,
          "properties":{
            "systemScaling": {
              "type":"object",
              "description":"(Optional) - Details regarding the scaling factor.",
              "additionalProperties":false,
              "properties":{
                "adjustSystemScaling":{
                  "type":"boolean",
                  "description":"(Required) - To be set to true if system scaling is adjusted, else false."
                },
                "measuredScalingFactor":{
                  "type":"number",
                  "description":"(Optional) - Value of the measured scaling factor."
                },
                "referenceScalingFactor":{
                  "type":"number",
                  "description":"(Optional) - Value of the reference scaling factor, determined ususally during the data processing."
                }
              },
              "required":[
                "adjustSystemScaling"
              ]
            },
            "calibrationType":{
              "type":"string",
              "description":"(Optional) - Type of calibration as a string."
            },
            "lastCalibration":{
              "type": "string",
              "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z)$",
              "description": "(Optional) - date and time of last calibration (YYYY-MM-DDThh:mm:ss.sss) in the ISO 8601 date-time format"
            }
          }
        },
        "CTAquisition": {
          "$ref": "#/$defs/CTAquisition",
          "description": "(Optional) - Details regarding the acquisition."
        },
        "geometry": {
          "$ref": "#/$defs/geometry",
          "description": "(Optional) - Details regarding the geometry."
        },
        "sampleStage": {
          "$ref": "#/$defs/sampleStageDetails",
          "description": "(Optional) - Details regarding the sample stage."
        },
        "detector": {
          "$ref": "#/$defs/detectorDetails",
          "description": "(Optional) - Details regarding the detector."
        }
      },
      "required": [
        "instrumentName",
        "instrumentManufacturer",
        "instrumentType",
        "source",
        "focalSpotMode",
        "CTAquisition",
        "geometry",
        "sampleStage",
        "detector"
      ]
    },
    "optics":{
      "type": "object",
      "description": "(Optional) - Details about the optics and individual motor positions.",
      "additionalProperties": false,
      "properties":{
        "collimator":{
          "type": "object",
          "description": "(Optional) - Details about the collimator and its individual motor positions.",
          "additionalProperties": false,
          "properties":{
            "collimatorDetails":{
              "type":"string",
              "description":"(Optional) - Details about the collimator relevant for the measurement."
            },
            "collimatorPositions":{
              "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the collimator.",
              "$ref": "#/$defs/motorPositions"
            }
          }
        },
        "monochromator":{
          "type": "object",
          "description": "(Optional) - Details about the monochromator and individual motor positions, if used.",
          "additionalProperties": false,
          "properties":{
            "monochromatorDetails":{
              "type":"object",
              "additionalProperties":false,
              "description":"(Optional) - Details of the monochromator type type, material, energy and notes.",
              "properties":{
                "monochromatorType":{
                  "type":"string",
                  "description":"(Optional) - Type of the monochromator."
                },
                "material":{
                  "type":"string",
                  "description":"(Optional) - Material of the monochromator."
                },
                "energy":{
                  "description": "(Optional) - Energy set in the monochromator. Typical unit - eV",
                  "$ref": "#/$defs/energyDetails"
                },
                "notes":{
                  "description":"(Optional) - Additional information about the monochromator relevant for the measurement."
                }
              }
            },
            "monochromatorPositions":{
              "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the monochromator.",
              "$ref": "#/$defs/motorPositions"
            }
          }
        },
        "condenser":{
          "type": "object",
          "description": "(Optional) - Details about the condenser lens and its individual motor positions, if used.",
          "additionalProperties": false,
          "properties":{
            "condenserDetails":{
              "type":"string",
              "description":"(Optional) - Details about the condenser relevant for the measurement."
            },
            "condenserPositions":{
              "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the condenser.",
              "$ref": "#/$defs/motorPositions"
            }
          }
        },
        "fresnelZonePlate":{
          "type": "object",
          "description": "(Optional) - Details about the fresnel zone plate and its individual motor positions, if used.",
          "additionalProperties": false,
          "properties":{
            "fresnelZonePlateDetails":{
              "type":"string",
              "description":"(Optional) - Details about the fresnel zone plate relevant for the measurement."
            },
            "fresnelZonePlatePositions":{
              "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the fresnel zone plate.",
              "$ref": "#/$defs/motorPositions"
            }
          }
        },
        "phaseRing":{
          "type": "object",
          "description": "(Required) - Details about the phase ring and its individual motor positions, if inserted.",
          "additionalProperties": false,
          "properties":{
            "phaseRingDetails":{
              "type":"string",
              "description":"(Optional) - Details about the phase ring relevant for the measurement."
            },
            "phaseRingPositions":{
              "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the phase ring.",
              "$ref": "#/$defs/motorPositions"
            }
          }
        }
      }
    },
    "CTAquisition":{
      "type":"object",
      "description":"(Required) - Details about the acquisition.",
      "additionalProperties":false,
      "properties":{
        "acquisitionScriptName":{
          "description":"(Required) - Name of the script used for acquisition.",
          "type":"string"
        },
        "numberOfProjections":{
          "description":"(Required) - Number of projections acquired during the CT.",
          "type":"number"
        },
        "startAngle":{
          "$ref": "#/$defs/angleDetails",
          "description": "(Required) - Start angle of the rotation of the sample during the CT. If the range is -180°/180°, then startAngle is -180°. Typical unit - degree."
        },
        "endAngle":{
          "$ref": "#/$defs/angleDetails",
          "description": "(Required) - End angle of the rotation of the sample during the CT. If the range is -180°/180°, then endAngle is 180°. Typical unit - degree."
        },
        "angularStepSize":{
          "$ref": "#/$defs/angleDetails",
          "description": "(Required) - Step size of the rotation of the sample during the CT. Typical unit - degree."
        },
        "useBadPixelMap":{
          "type":"boolean",
          "description": "(Optional) - To be set to true if bad pixel map is used. This parameter is relevant for SEM based CT."
        },
        "referenceImages":{
          "type":"object",
          "description":"(Optional) - Details on the reference images (if used) - number of flats/bright images and number of dark images.",
          "additionalProperties":false,
          "properties":{
            "numberOfBrightImages":{
              "type":"number",
              "description": "(Optional) - Number of flats or bright images used as reference."
            },
            "numberOfDarkImages":{
              "type":"number",
              "description": "(Optional) - Number of dark images used as reference."
            }
          }
        },
        "acquisitionTimePerProjection":{
          "$ref": "#/$defs/timeDetails",
          "description": "(Required) - Time taken for acquisition of a single projection. Typical unit - s."
        },
        "totalAcquisitionTime":{
          "type":"string",
          "description": "(Required) - Time taken for acquisition for the entire scan. This is the total scan time, i.e. number of projections multipled by exposure time, but including read-out time. calculated as EndTime-StartTime. Format: hh:mm:ss.",
          "pattern":"^(\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?)$",
          "format":"time"
        },
        "largeFOV":{
          "type":"boolean",
          "description": "(Required) - To be set to true if large field of view or wide field of view is used."
        },
        "scanningMode":{
          "type":"string",
          "description":"(Optional) - The scanning mode used during acquisition - helical, raster scanning, fast CT.",
          "enum":[
            "Helical",
            "Raster Scanning",
            "Fast CT"
          ]
        },
        "phaseContrastMode":{
          "type":"string",
          "description":"(Required) - The phase contrast mode used during acquisition - Zernike phase contrast, propagation-based, grating-based(Hartmann), grating-based(Talbot).",
          "enum":[
            "Zernike phase contrast",
            "Propagation-based",
            "Grating-based(Hartmann)",
            "Grating-based(Talbot)"
          ]
        }
      },
      "required":[
        "acquisitionScriptName",
        "startAngle",
        "endAngle",
        "angularStepSize",
        "acquisitionTimePerProjection",
        "totalAcquisitionTime",
        "largeFOV",
        "phaseContrastMode"
      ]
    },
    "geometry":{
      "type": "object",
      "description": "Describes the geometry of the CT instrument",
      "additionalProperties": false,
      "properties":{
        "sourceToObjectDistance":{},
        "objectToDetectorDistance":{},
        "beamGeometry":{},
        "geometricMagnification":{},
        "opticalMagnification":{}
      },
      "required":[
        "sourceToObjectDistance",
        "objectToDetectorDistance",
        "beamGeometry",
        "geometricMagnification",
        "opticalMagnification"
      ]
    },
    "manufacturerDetails": {
      "type": "object",
      "description": "(Optional) - Details about the manufacturer or vendor of the instrument. Properties: manufacturerName (Optional) - Name of the manufacturer, modelName (Optional) - Model of the instrument, manufacturerID (Optional) - Identifier of the manufacturer",
      "additionalProperties": false,
      "properties": {
        "manufacturerName": {
          "type": "string",
          "description": "(Optional) - Name of the manufacturer"
        },
        "modelName": {
          "type": "string",
          "description": "(Optional) - Model of the instrument"
        },
        "manufacturerID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier of the manufacturer"
        }
      }
    },
    "powerDetails": {
      "type": "object",
      "description": "Describes a power",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(required, NAE) - The power expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "W",
          "description": "(required, NAE) - the unit of the value to be selected from a controlled list (mW, W, kW, default value - W) of datatype string.",
          "enum": [
            "mW",
            "W",
            "kW"
          ]
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(optional, NAE) - A qualifier to describe the value (e.g., avg, max, min, default value - max) of datatype string.",
          "enum": [
            "max",
            "min",
            "average"
          ]
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(optional, NAE) - Uncertainty in the value defined separately as uncertaintyDetails,(allows choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number)."
        },
        "notes": {
          "type": "string",
          "description": "(optional, NAE) - Further notes about the value of datatype string."
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "pressureDetails": {
      "type": "object",
      "description": "(Required) - Describes a pressure.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the pressure"
        },
        "unit": {
          "type": "string",
          "default": "Pa",
          "enum": [
            "Pa",
            "hPa",
            "kPa",
            "MPa",
            "GPa",
            "mbar",
            "bar",
            "psi"
          ],
          "description": "(Required) - Unit of the value to be selected from a controlled list (Pa, hPa, kPa, MPa, GPa, mbar, bar, psi, default value - Pa)"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max)"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty of the value. Allows to specify whether the uncertainty is absolute or relative"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "rampDetails": {
      "type": "object",
      "description": "(Optional) - Describes a rate at which temperature is increased or decreased.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the rate of temperature increase or decrease."
        },
        "unit": {
          "type": "string",
          "description": "(Optional) - Unit of the value to be selected from a controlled list (K/min, K/s)",
          "default": "K/min",
          "enum": [
            "K/min",
            "K/s"
          ]
        },
        "qualifier": {
          "type": "string",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max)",
          "default": "max"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "temperatureDetails": {
      "type": "object",
      "description": "(Optional) - Describes a temperature.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - Value of the temperature"
        },
        "unit": {
          "type": "string",
          "description": "(Optional) - Unit of the value to be selected from a controlled list (K, ºC, ºF)",
          "default": "K",
          "enum": [
            "K",
            "ºC",
            "ºF"
          ]
        },
        "qualifier": {
          "type": "string",
          "description": "(Optional) - Qualifier to describe the value (e.g., average, maximum, minimum, default value - max)",
          "default": "max"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "lifetimeDetails": {
      "type": "object",
      "description": "describes a lifetime.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The lifetime of the source expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "µAh",
          "description": "(Required) - the unit of the value (default value - µAh) of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "motorPositions": {
      "description": "(Optional) - Positions in cartesian coordinates and tilt angles of the item.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "itemPosition": {
          "$ref": "#/$defs/coordinateSet",
          "description": "(Optional) - The xyz coordinates decribing the motor positions of the item."
        },
        "itemTilt": {
          "description": "(Optional) - The three tilt angles alpha, beta and gamma describing the motor positions of the item.",
          "$ref": "#/$defs/angleSet"
        }
      }
    },
    "voltageDetails": {
      "type": "object",
      "description": "describes a voltage.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The voltage expressed as an integer or floating point value of datatype number."
        },
        "unit": {
          "type": "string",
          "default": "kV",
          "enum": [
            "µV",
            "mV",
            "V",
            "kV",
            "MV"
          ],
          "description": "(Required) - the unit of the value to be selected from a controlled list (µV, mV, V, kV, MV, GV default value - V) of datatype string."
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string."
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number."
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string."
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "currentDetails": {
      "type": "object",
      "description": "Describes a current.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Optional) - Further notes about the value of datatype string."
        },
        "unit": {
          "type": "string",
          "default": "pA",
          "enum": [
            "pA",
            "nA",
            "µA",
            "mA",
            "A"
          ],
          "description": "(Required) - the unit of the value to be selected from a controlled list (pA, nA, uA, mA, A default value - pA) of datatype string."
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string."
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number."
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string."
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "stageDetails": {
      "type": "object",
      "description": "describes the stage settings during a measurement.",
      "additionalProperties": false,
      "properties": {
        "stageAlignmentDone": {
          "type": "boolean",
          "description": "(Optional) - was stage alignment done? (check if true)"
        },
        "isCorrelationImage": {
          "type": "boolean",
          "description": "(Optional) - Whether the image is used for correlating in xyz coordinates with another image? Check if true. If true the coordinates have to be entered for the sake of correlative characterization of datatype boolean"
        },
        "coordinates": {
          "$ref": "#/$defs/coordinateSet",
          "description": "(Optional) - the xyz coordinates of a point expressed separately as coordinateSet which allows entering each of the xyz coordinates along with their optional uncertainties. If correllation images (two reference spots) are available, the coordinates enable correlative microscopy and they need to be entered"
        },
        "coordinateReference": {
          "type": "string",
          "default": "origin at centre of sample",
          "description": "(Optional) - description of the reference used for defining the coordinates (for eg. - origin at centre of sample, distances from two edges, etc.)"
        },
        "stageTiltAngle": {
          "$ref": "#/$defs/angleDetails",
          "description": "(Required) - angle by which the stage is actually tilted (Stage at T) defined separately as angleDetails with the angle value, optional uncertainty, optional notes, optional qualifier and choice of units between degree and radian"
        },
        "preTilt": {
          "$ref": "#/$defs/angleDetails",
          "description": "(Optional) - predefined angle of a tilted sample holder which is tilted by design defined separately as angleDetails with the angle value, optional uncertainty, optional notes, optional qualifier and choice of units between degree and radian"
        },
        "tiltCorrectionAngle": {
          "$ref": "#/$defs/angleDetails",
          "description": "(Optional) - angle used to correct the tilt of the sample defined separately as angleDetails with the angle value, optional uncertainty, optional notes, optional qualifier and choice of units between degree and radian"
        },
        "tiltCorrectionType": {
          "type": "string",
          "default": "none",
          "description": "(Optional) - the tilt correction type applied to the image to compensate for the tilting, for e.g., sample surface, cross-section, none or manual, default value- none of datatype string"
        },
        "eBeamWorkingDistance": {
          "$ref": "#/$defs/distanceDetails",
          "description": "(Required) - the distance at which the beam is focussed (when the sample is in focus, this will be the distance between the bottom end of the pole-piece of the objective lens and the sample) defined separately as distanceDetails, with the distance value, optional uncertainty, optional notes, optional qualifier and choice of units between nm, um, mm, cm and m"
        }
      },
      "required": [
        "eBeamWorkingDistance",
        "stageTiltAngle"
      ]
    },
    "angleDetails": {
      "type": "object",
      "description": "describes an angle.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The angle expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "degree",
          "enum": [
            "degree",
            "radian"
          ],
          "description": "(Required) - the unit of the value to be selected from a controlled list (degree, radian; default value - degree) of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined separately as uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "imagingDetails": {
      "type": "object",
      "description": "describes the imaging settings of the instrument during the measurement.",
      "additionalProperties": false,
      "properties": {
        "numberOfPixels": {
          "$ref": "#/$defs/pixelNumberType",
          "description": "(Required) - The number of x, y pixels of the image, defined separately as pixelNumberType with separate entries for integer values of xPixels and yPixels"
        },
        "pixelSize": {
          "$ref": "#/$defs/pixelsize3D",
          "description": "(Required) - Physical x,y,z length imaged by a single pixel, normally expressed in nm/pixel, defined separately as pixelSize3D for the mapping along x,y and z directions, with each pixel having a pixelSize, optional uncertainty, optional qualifier and optional notes. The y-pixel-size is to be given only if it is different from the x-pixel-size, and z-pixel-size can be ignored if it is greater than voxel size"
        },
        "collectionMethod": {
          "type": "string",
          "default": "normal scan",
          "description": "(Optional) - the method of collection of the image, for e.g., normal scan, average of multiple images, integration of multiple images, default value - normal scan, of datatype string"
        },
        "dynamicFocus": {
          "type": "boolean",
          "description": "(Optional) - To be set to true if dynamic focus is turned on, else false"
        },
        "apertureSetting": {
          "$ref": "#/$defs/apertureSettingType",
          "description": "(Optional) - The setting for controlling the aperture size, using either the aperture size (directly) or the beam current (indirectly). The element apertureSetting is defined separately as apertureSettingType which gives the option to choose between current or size. If the size can be set directly, then it is defined with the complex type distanceDetails, else if the aperture setting is controlled with the beam current defined separately as currentDetails"
        },
        "dwellTime": {
          "$ref": "#/$defs/timeDetails",
          "description": "(Optional) - the dwell time of the beam per pixel, defined separately as  timeDetails"
        },
        "cycleTime": {
          "$ref": "#/$defs/timeDetails",
          "description": "(Optional) - the time taken by the beam to scan a frame,  defined separately as  timeDetails. It is the time needed to scan a line times the number of lines in a frame."
        },
        "noiseReduction": {
          "type": "string",
          "description": "(Optional) - The type of noise reduction used as an enumerated list of six parameters: Pixel Avg, Line Avg, Frame Avg,  Pixel Int, Line Int, Frame Int.",
          "enum": [
            "Pixel Avg",
            "Line Avg",
            "Frame Avg",
            "Pixel Int",
            "Line Int",
            "Frame Int"
          ]
        },
        "voxel": {
          "$ref": "#/$defs/voxelDetails",
          "description": "(Optional) - Size of the voxel in case 3D imaging is done for Energy-dispersive X-ray Spectroscopy or Electron-backscatter Diffraction, defined separately as voxelDetails"
        }
      },
      "required": [
        "numberOfPixels",
        "pixelSize"
      ]
    },
    "coordinateSet": {
      "type": "object",
      "description": "The set of xyz values describing a point of reference for correlative characterization.",
      "additionalProperties": false,
      "properties": {
        "xValue": {
          "type": "number",
          "description": "(Optional) - value of the x coordinate of datatype number"
        },
        "xUncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - uncertainty in the x value defined separately as uncertaintyDetails"
        },
        "yValue": {
          "type": "number",
          "description": "(Optional) - value of the y coordinate of datatype number"
        },
        "yUncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) -uncertainty in the y value defined separately as uncertaintyDetails"
        },
        "zValue": {
          "type": "number",
          "description": "(Optional) - value of the zcoordinate of datatype number"
        },
        "zUncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) -uncertainty in the z value defined separately as uncertaintyDetails"
        },
        "coordinatesUnit": {
          "type": "string",
          "default": "µm",
          "enum": [
            "nm",
            "µm",
            "mm",
            "cm",
            "m"
          ],
          "description": "(Optional) - unit of the coordinates (allowed units - nm, µm, mm, cm, m)"
        }
      },
      "required": [
        "xValue",
        "yValue",
        "zValue",
        "coordinatesUnit"
      ]
    },
    "angleSet": {
      "type": "object",
      "description": "(Optional) - Tilt angles alpha, beta and gamma decribing the three angular positions of an item.",
      "additionalProperties": false,
      "properties": {
        "alpha": {
          "type": "number",
          "description": "(Optional) - Tilt angle alpha of the item."
        },
        "beta": {
          "type": "number",
          "description": "(Optional) - Rotation angle beta of the item."
        },
        "gamma": {
          "type": "number",
          "description": "(Optional) - Angle gamma of the item."
        },
        "anglesUnit": {
          "type": "string",
          "default": "degree",
          "enum": [
            "degree",
            "radian"
          ],
          "description": "(Optional) - unit of the angles (allowed units - degree or radian)"
        }
      }
    },
    "pixelNumberType": {
      "type": "object",
      "description": "describes the resolution of the image split into number of pixels in x and y directions.",
      "additionalProperties": false,
      "properties": {
        "xPixels": {
          "type": "number",
          "description": "(Required) - no. of pixels in horizontal direction of datatype number"
        },
        "yPixels": {
          "type": "number",
          "description": "(Required) - no. of pixels in vertical direction of datatype number"
        }
      },
      "required": [
        "xPixels",
        "yPixels"
      ]
    },
    "apertureSettingType": {
      "type": "object",
      "description": "The setting for controlling the aperture size, using either the aperture size directly or indirectly using the beam current. Therefore one of the two properties must be selected: size or current.",
      "additionalProperties": false,
      "properties": {
        "size": {
          "$ref": "#/$defs/distanceDetails",
          "description": "(Optional) - the size of the aperture which can be directly controlled using the instrument settings defined separately as distanceDetails"
        },
        "current": {
          "$ref": "#/$defs/currentDetails",
          "description": "(Optional) - the beam current setting which would indirectly control the size of the aperture defined separately as currentDetails"
        }
      }
    },
    "pixelsize3D": {
      "type": "object",
      "description": "the distance on the sample imaged by a single pixel, normally expressed in nm/pixel, is expressed in 3D for the mapping along x,y and z directions.",
      "additionalProperties": false,
      "properties": {
        "xPixelSize": {
          "$ref": "#/$defs/pixelSizeDetails",
          "description": "(Required) -  distance on the sample covered by a pixel in the x direction defined separately as pixelSizeDetails"
        },
        "yPixelSize": {
          "$ref": "#/$defs/pixelSizeDetails",
          "description": "(Optional) - distance on the sample covered by a pixel in the y direction defined separately as pixelSizeDetails; The y-pixel-size is to be given only if it is different from the x-pixel-size"
        },
        "zPixelSize": {
          "$ref": "#/$defs/pixelSizeDetails",
          "description": "(Optional) - distance on the sample covered by a pixel in the z direction defined separately as pixelSizeDetails; The z-pixel-size can be ignored if it is greater than the voxel size"
        }
      },
      "required": [
        "xPixelSize"
      ]
    },
    "pixelSizeDetails": {
      "type": "object",
      "description": "describes the size of a pixel.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The pixel-size expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "nm/pixel",
          "description": "(Required) - the unit of the value (default value - nm/pixel) of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "timeDetails": {
      "type": "object",
      "description": "describes a time.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The time expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "µs",
          "enum": [
            "ps",
            "ns",
            "µs",
            "ms",
            "s"
          ],
          "description": "(Required) - the unit of the value to be selected from a controlled list (ps, ns, µs, ms, s default value - µs) of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "voxelDetails": {
      "type": "object",
      "description": "describes the size of a voxel.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The voxel-size expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "default": "mm",
          "description": "(Required) - the unit of the value of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    },
    "detectorSetDetails": {
      "type": "object",
      "description": "gives information about signal mixing between two detectors and provides the information about the detector(s).",
      "additionalProperties": false,
      "properties": {
        "signalMixingDone": {
          "type": "boolean",
          "default": false,
          "description": "(Optional) - whether the detector signals are mixed, true or false, of datatype boolean"
        },
        "signalMixingDescription": {
          "type": "string",
          "description": "(Optional) - Describes the purpose and technique of signal mixing of datatype string"
        },
        "detector1": {
          "$ref": "#/$defs/detectorDetails",
          "description": "(Required) - gives the settings of one detector defined separately as detectorDetails; entering the details of at least one detector is compulsory"
        },
        "detector2": {
          "$ref": "#/$defs/detectorDetails",
          "description": "(Optional) - gives the settings of a second detector defined separately as detectorDetails"
        }
      },
      "required": [
        "detector1"
      ]
    },
    "detectorDetails": {
      "type": "object",
      "description": "gives the settings of a detector.",
      "additionalProperties": false,
      "properties": {
        "detectorType": {
          "type": "string",
          "default": "Secondary Electron",
          "description": "(Optional) - The type of detector (e.g., surface electron detection,  secondary electron, back-scattered electron) of datatype string"
        },
        "detectorName": {
          "type": "string",
          "description": "(Required) -Name of the detector of datatype string"
        },
        "detectorID": {
          "$ref": "#/$defs/identifier",
          "description": "(Optional) - Identifier for the detector"
        },
        "detectorManufacturer": {
          "$ref": "#/$defs/manufacturerDetails",
          "description": "(Optional) - describes the details of the detector (manufacturerName, modelName and detectorID) as part of manufacturerDetails"
        },
        "componentGeometry": {
          "$ref": "#/$defs/coordinateSet",
          "description": "(Optional) - xyz coordinates describing the position of the detector defined separately as coordinateSet"
        },
        "lastCalibration": {
          "type": "string",
          "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z)$",
          "description": "(Optional) - date and time of last calibration (YYYY-MM-DDThh:mm:ss.sss) in the ISO 8601 date-time format"
        },
        "detectorBias": {
          "$ref": "#/$defs/voltageDetails",
          "description": "(Optional) - bias voltage applied to the detector defined separately as voltageDetails. Allowed units nV, uV, mV, V, kV"
        }
      },
      "required": [
        "detectorName"
      ]
    },
    "eBeamDecelerationDetails": {
      "type": "object",
      "description": "Details about deceleration of the e- beam.",
      "additionalProperties": false,
      "properties": {
        "landingEnergy": {
          "$ref": "#/$defs/energyDetails",
          "description": "(Optional) - Landing energy of the e-beam defined separately as energyDetails (allowed units - meV, eV, keV, nJ, mJ, J, kJ, MJ)"
        },
        "stageBias": {
          "$ref": "#/$defs/voltageDetails",
          "description": "(Optional) - Bias voltage applied to the stage defined separately biasDetails (allowed units - nV, uV, mV, V, kV, nA, uA, mA, A, kA)"
        }
      }
    },
    "energyDetails": {
      "type": "object",
      "description": "describes an energy.",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "number",
          "description": "(Required) - The energy expressed as an integer or floating point value of datatype number"
        },
        "unit": {
          "type": "string",
          "enum": [
            "meV",
            "eV",
            "keV",
            "MeV",
            "nJ",
            "mJ",
            "µJ",
            "J",
            "kJ",
            "MJ"
          ],
          "description": "(Required) - the unit of the value to be selected from a controlled list (meV, eV, keV, MeV, nJ, µJ, mJ, J, kJ, MJ; default value - keV) of datatype string"
        },
        "qualifier": {
          "type": "string",
          "default": "max",
          "description": "(Optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string"
        },
        "uncertainty": {
          "$ref": "#/$defs/uncertaintyDetails",
          "description": "(Optional) - Uncertainty in the value defined separately as uncertaintyDetails giving the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number"
        },
        "notes": {
          "type": "string",
          "description": "(Optional) - Further notes about the value of datatype string"
        }
      },
      "required": [
        "unit",
        "value"
      ]
    }
  }
}