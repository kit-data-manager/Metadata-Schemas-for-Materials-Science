var dataModel = {
   "$schema":"https://json-schema.org/draft/2019-09/schema",
   "$id":"https://mdmc.kit.edu/schemas/sem_metadata",
   "type":"object",
   "description":"The purpose of this JSON Schema is to provide description of a scanning electron microscopy(SEM) measurement. The cardinality of all parameters are either defined as required or optional and wherever possible a list of controlled vocabularies is provided.",
   "properties":{
      "entry":{
         "$ref":"#/$defs/entry"
      }
   },
   "required":[
      "entry"
   ],
   "title":"sem",
   "$defs":{
      "entry":{
         "type":"object",
         "description":"The entry level contains all the metadata describing a single measurement. The design of the schema is modular: in case of multiple measurements, an entry for each measurement can be included. It is the root element of the schema. Properties: entryID (required)- Identifier of the measurement usually provided by the project or the laboratory, title (required)- Extended title of the measurement of datatype string, startTime (optional)- Start time of the measurement in the format CCYY-MM-DDThh:mm:ss.sss, endTime (required)- End time of the measurement in the format CCYY-MM-DDThh:mm:ss.sss, definition (optional)- Name of the schema to which this entry conforms of datatype string, program (optional)- details concerning the program (or software) used for aquisition, defined separately as programDetails, revision (optional)- details concerning any revision to the xml document due to e.g. re-calibration, reprocessing, new analysis, new instrument definition format defined separately as revisionDetails, user (required)- the contact information of the user responsible for the measurement defined separately as userDetails, sample (required)- details concerning the sample defined separately as sampleDetails, instrument (required)- details concerning the instrument settings defined separately as instrumentDetails.",
         "additionalProperties":false,
         "properties":{
            "entryID":{
               "$ref":"#/$defs/identifier"
            },
            "title":{
               "type":"string"
            },
            "startTime":{
               "type":"string",
               "pattern":"(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z)"
            },
            "endTime":{
               "type":"string",
               "pattern":"(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z)"
            },
            "definition":{
               "type":"string"
            },
            "program":{
               "$ref":"#/$defs/program"
            },
            "revision":{
               "$ref":"#/$defs/revision"
            },
            "user":{
               "$ref":"#/$defs/user"
            },
            "sample":{
               "$ref":"#/$defs/sample"
            },
            "instrument":{
               "$ref":"#/$defs/instrumentDetails"
            }
         },
         "required":[
            "title",
            "endTime",
            "definition",
            "user",
            "sample",
            "instrument"
         ],
         "title":"entry"
      },
      "identifier":{
         "type":"object",
         "description":"Details of an identifier element. Properties: identifierValue (optional) - a string containing the value of an identifier, identifierType (optional) - type of the identifier to be chosen from a controlled list of values -*ROR *GRID *ISNI *URL *DOI *Handle",
         "additionalProperties":false,
         "properties":{
            "identifierValue":{
               "type":"string"
            },
            "identifierType":{
               "type":"string",
               "description":"(Optional) - Type of the identifier to be chosen from a controlled list of values, e.g. *ROR *GRID *ISNI *URL *DOI *Handle",
               "enum":[
                  "ROR",
                  "GRID",
                  "ISNI",
                  "URL",
                  "DOI",
                  "Handle"
               ]
            }
         }
      },
      "program":{
         "type":"object",
         "description":"Details concerning the program (or software) used for aquisition. Properties: programName (optional) - Name of the program (or software) used for acquisition of datatype string, programVersion (optional)- Program (or software) version number of datatype string",
         "additionalProperties":false,
         "properties":{
            "programName":{
               "type":"string"
            },
            "programVersion":{
               "type":"string"
            }
         },
         "title":"program"
      },
      "revision":{
         "type":"object",
         "additionalProperties":false,
         "description":"details concerning any revision to the xml document due to e.g. re-calibration, reprocessing, new analysis, new instrument definition format. Properties: revisionID (optional) - Identifier of the file, revisionComment (optional)- any comments to the revision of the datatype string",
         "properties":{
            "revisonID":{
               "$ref":"#/$defs/identifier"
            },
            "revisionComment":{
               "type":"string"
            }
         },
         "title":"revision"
      },
      "user":{
         "type":"object",
         "additionalProperties":false,
         "description":"Lists the contact information of the user responsible for the measurement. Properties: userName (required) - the full name of the user in the format (Family Name, Given Name) of the datatytpe string, givenName (optional)-Given name (first name) of the user, familyName (optional) - Family name or last name of the user, role (optional) - Role of the user to be selected from an enumerated list - *Data Curator *Instrument Scientist *Principal Investigator *Project Member *Research User *Site Leader *Work Package Leader, affiliation (optional) - Details of the institution to which the user is affiliated, email (optional) -Email of the userof datatype string (only valid email-ids are acceptable), ORCID (optional) - Open Researcher and Contributor ID expressed as a URI",
         "properties":{
            "userName":{
               "type":"string"
            },
            "givenName":{
               "type":"string"
            },
            "familyName":{
               "type":"string"
            },
            "role":{
               "type":"string",
               "enum":[
                  "Data Curator",
                  "Instrument Scientist",
                  "Principal Investigator",
                  "Project Member",
                  "Research user",
                  "Site Leader",
                  "Work Package Leader"
               ]
            },
            "affiliation":{
               "$ref":"#/$defs/institutionDetails"
            },
            "email":{
               "type":"string",
               "format":"email"
            },
            "ORCID":{
               "type":"string",
               "pattern":"^https://orcid\\.org/[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{3}[X0-9]{1}$"
            }
         },
         "required":[
            "userName",
            "role"
         ],
         "title":"user"
      },
      "institutionDetails":{
         "type":"object",
         "additionalProperties":false,
         "description":"Details of the institution to which the user is affiliated. Properties: institutionName (optional) - The full name of an institution of datatype string, institutionAcronym (optional) - The acronym of the institution. Note that authors often cite with acronyms, so this information can be important in matching a query of datatype string, institutionDepartment (optional)- The department within an institution of datatype string, institutionIdentifier (optional) - Identifier pertaining to the institution",
         "properties":{
            "institutionName":{
               "type":"string"
            },
            "institutionAcronym":{
               "type":"string"
            },
            "institutionDepartment":{
               "type":"string"
            },
            "institutionID":{
               "$ref":"#/$defs/identifier"
            }
         }
      },
      "sample":{
         "type":"object",
         "additionalProperties":false,
         "description":"details concerning the sample: properties- sampleName (required) - Name of the sample of the datatype string, sampleID (optional) - Identifier for the sample, conductive (required) - Indicates whether the sample  is conductive of datatype boolean, magnetic (required) - Indicates whether the sample is magnetic of datatype boolean, eBeamSensitive (required) - Indicates whether the sample is not stable under electron beam of datatype boolean, iBeamSensitive (required) - Indicates whether the sample is not stable under ion beam of datatype boolean, embeddingMedium (required) - Supporting medium in which the specimen are embedded (e.g., none, demotec 30, 70, Epoxy) of datatype string with default value set as none, sampleForm (optional) - Description of the sample form (e.g., bulk, nanostructured, powder, pellet) of datatype string, sampleSize (optional) - Size of the sample defined separately as distanceDetails (includes value, optional uncertainty, optional qualifier, optional notes and a controlled list of units for length - nm, um, mm, cm, m), sampleWeight (optional) - Weight of the sample defined separately as weightDetails (includes the value, optional uncertainty, optional qualifier, optional notes and a controlled list of units for weight - ng, ug, mg, g, kg), finalSpecimen (optional) - Type of the specimen to be prepared (eg. TEM lamella, APT tip, cross-section, slide&amp;view experiment)of datatype string, sampleHolder (optional) - Type of sample holder used (e.g., stub, dish, cylinder) of datatype string, fixingMethod (optional) - The method used to attach the sample to the sample holder (e.g., silver tape, silver paint, carbon paint, aluminum tape, glue) of datatype string, conductiveCoatingApplied (optional) - Whether a conductive coating is applied of datatype boolean, conductiveCoating (optional) - Conductive coating material used of datatype string, storageConditions (optional) - Environment conditions in which the sample has to be stored before and after the measurement (e.g., nitrogen atmosphere, hermetically sealed, controlled temperature and pressure etc) of datatype string, measurementConditions (optional) - Conditions to be maintained during the measurement inside the machine (e.g., water vapor, cryogenic temperature) of datatype string, samplePreparation (optional) - Details about the sample preparation defined separately as samplePrepType (includes details like date of preparation, description of preparation and preparationID) of datatype string",
         "properties":{
            "sampleName":{
               "type":"string"
            },
            "sampleID":{
               "$ref":"#/$defs/identifier"
            },
            "conductive":{
               "type":"boolean"
            },
            "magnetic":{
               "type":"boolean"
            },
            "eBeamSensitive":{
               "type":"boolean"
            },
            "iBeamSensitive":{
               "type":"boolean"
            },
            "embeddingMedium":{
               "type":"string",
               "default":"none"
            },
            "sampleForm":{
               "type":"string"
            },
            "sampleSize":{
               "$ref":"#/$defs/distanceDetails"
            },
            "sampleWeight":{
               "$ref":"#/$defs/weightDetails"
            },
            "finalSpecimen":{
               "type":"string",
               "default":"TEM Lamella"
            },
            "sampleHolder":{
               "type":"string"
            },
            "fixingMethod":{
               "type":"string",
               "default":"Carbon Tape"
            },
            "conductiveCoatingApplied":{
               "type":"boolean"
            },
            "storageConditions":{
               "type":"string",
               "default":"Ambient, dry environment"
            },
            "measurementConditions":{
               "type":"string",
               "default":"water vapour"
            },
            "samplePreparation":{
               "$ref":"#/$defs/samplePrepType"
            }
         },
         "required":[
            "conductive",
            "eBeamSensitive",
            "iBeamSensitive",
            "magnetic",
            "sampleName"
         ],
         "title":"sample"
      },
      "distanceDetails":{
         "type":"object",
         "description":"describes a distance, size or length. Properties: value (required) - The distance, size or length expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (nm, µm, mm, cm, m, default value - mm) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min, default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as uncertaintyDetails,(allows choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number), notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "description":"(required) - The distance, size or length expressed as an integer or floating point value of datatype number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"mm",
               "enum":[
                  "nm",
                  "um",
                  "mm",
                  "cm",
                  "m"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "value",
            "unit"
         ],
         "title":"distanceDetails"
      },
      "uncertaintyDetails":{
         "type":"object",
         "description":"describes an uncertainty. Properties: type (required) - type of the uncertainty to be chosen between absolute or relative of datatype string, value (required) -  value of the uncertainty expressed as a number",
         "additionalProperties":false,
         "properties":{
            "uncertaintyType":{
               "type":"string",
               "enum":[
                  "absolute",
                  "relative"
               ]
            },
            "value":{
               "type":"number",
               "default":-9999
            }
         },
         "required":[
            "value"
         ],
         "title":"uncertaintyDetails"
      },
      "weightDetails":{
         "type":"object",
         "description":"describes a weight. Properties: value (required) - The weight expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (ng, µg, mg, g, kg, default value - ug) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min, default value - max), of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as uncertaintyDetails which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"ug",
               "enum":[
                  "ng",
                  "ug",
                  "mg",
                  "g",
                  "kg"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "value",
            "unit"
         ],
         "title":"weightDetails"
      },
      "samplePrepType":{
         "type":"object",
         "description":"describes the sample preparation process. Properties: preparationDate (optional) - Date of preparation in the form CCYY-MM-DD, preparationDescription (optional) -Short description of the preparation of datatype string, preparationID (optional) - Identifier for the sample preparation",
         "additionalProperties":false,
         "properties":{
            "preparationDate":{
               "type":"string",
               "format":"date"
            },
            "preparationDescription":{
               "type":"string"
            },
            "preparationID":{
               "$ref":"#/$defs/identifier"
            }
         },
         "title":"samplePrepType"
      },
      "instrumentDetails":{
         "type":"object",
         "additionalProperties":false,
         "description":"details giving the relevant instrument settings and the collection of the components of the instrument. Properties: instrumentName (required) - Name of the instrument of datatype string, instrumentID (optional) - Identifier for the instrument, instrumentManufacturer (optional) - details like manufacturer name, model name and manufacturer ID, grouped together and defined separately as manufacturerDetails, chamberPressure (required) - pressure maintained inside the chamber (in which the sample is housed) during the measurement defined separately as pressureDetails, eBeamSource (required) - Details about the electron beam source defined separately as sourceDetails, stage (required) - Details about the stage defined separately as stageDetails, imaging (required) - Details about the imaging settings of the instrument defined separately as imagingDetails, detectors (required) - this group for the SEM contains at least one detector, with further option to include a second one in case of signal mixing. The group itself is defined separately as detectorSetDetails, which contains the elements to indicate if signal mixing is done, a description for signal mixing and options for details of two detectors; Each of the detector groups are defined separately as detectorDetails, eBeamDeceleration (required) - Details about the instrument settings for electron beam deceleration defined separately as eBeamDecelerationDetails, FIB (optional) - Details about an additional focussed ion beam (FIB) extension to the instrument, defined separately as FIBDetails",
         "properties":{
            "instrumentName":{
               "type":"string"
            },
            "instrumentID":{
               "$ref":"#/$defs/identifier"
            },
            "instrumentManufacturer":{
               "$ref":"#/$defs/manufacturerDetails"
            },
            "chamberPressure":{
               "$ref":"#/$defs/pressureDetails"
            },
            "eBeamSource":{
               "$ref":"#/$defs/sourceDetails"
            },
            "stage":{
               "$ref":"#/$defs/stageDetails"
            },
            "imaging":{
               "$ref":"#/$defs/imagingDetails"
            },
            "detectors":{
               "$ref":"#/$defs/detectorSetDetails"
            },
            "eBeamDeceleration":{
               "$ref":"#/$defs/eBeamDecelerationDetails"
            },
            "FIB":{
               "$ref":"#/$defs/FIBDetails"
            }
         },
         "required":[
            "chamberPressure",
            "detectors",
            "eBeamSource",
            "imaging",
            "instrumentName",
            "stage"
         ],
         "title":"instrument"
      },
      "manufacturerDetails":{
         "type":"object",
         "description":"gives details like the name of the manufacturer and model of the instrument and an ID. Properties: manufacturerName (optional) - Name of the manufacturer of datatype string, modelName (optional) - Model of the instrument of datatype string, manufacturerID (optional) - Identifier for the manufacturer",
         "additionalProperties":false,
         "properties":{
            "manufacturerName":{
               "type":"string"
            },
            "modelName":{
               "type":"string"
            },
            "manufacturerID":{
               "$ref":"#/$defs/identifier"
            }
         }
      },
      "pressureDetails":{
         "type":"object",
         "description":"describes a pressure measurement. Properties: value (required) - The pressure expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (Pa, hPa, kPa, MPa, GPa, mbar, bar, psi, default value - Pa) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min), default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"Pa",
               "enum":[
                  "Pa",
                  "hPa",
                  "kPa",
                  "MPa",
                  "GPa",
                  "mbar",
                  "bar",
                  "psi"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"pressureDetails"
      },
      "sourceDetails":{
         "type":"object",
         "description":"gives details about the electron beam source. Properties: sourceName (optional) - name of the e-beam source of datatype string, sourceID (optional) - identifier for the e-beam source, accelerationVoltage (required) - the voltage with which the e-beam is accelerated, defined separately as voltageDetails, (includes the voltage value, optional uncertainty, optional qualifier like max or min, optional note of the type string, and a controlled list of units from which one can be chosen - uV, mv, V, kV, MV), beamCurrent (optional) - the measured current of the e-beam, defined separately as currentDetails (includes the current value, optional uncertainty, optional qualifier like max or min, optional note of the type string, and a controlled list of units from which one can be chosen - pA, nA, uA, mA, A, kA), sourceLifetime (optional) - lifetime of the e-beam source (default value - uAh) of datatype string",
         "additionalProperties":false,
         "properties":{
            "sourceName":{
               "type":"string"
            },
            "sourceID":{
               "$ref":"#/$defs/identifier"
            },
            "accelerationVoltage":{
               "$ref":"#/$defs/voltageDetails"
            },
            "beamCurrent":{
               "$ref":"#/$defs/currentDetails"
            },
            "sourceLifetime":{
               "$ref":"#/$defs/lifetimeDetails"
            }
         },
         "required":[
            "accelerationVoltage"
         ],
         "title":"sourceDetails"
      },
      "lifetimeDetails":{
         "type":"object",
         "description":"describes a lifetime. Properties: value (required) - The lifetime of the source expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value (default value - uAh) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"uAh"
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"lifetimeDetails"
      },
      "voltageDetails":{
         "type":"object",
         "description":"describes a voltage. Properties: value (required) - The voltage expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (uV, mV, V, kV, MV, GV default value - V) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"kV",
               "enum":[
                  "uV",
                  "mV",
                  "V",
                  "kV",
                  "MV"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"voltageDetails"
      },
      "currentDetails":{
         "type":"object",
         "description":"describes a current. Properties: value (required) - The voltage expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (pA, nA, uA, mA, A default value - pA) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as  uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"pA",
               "enum":[
                  "pA",
                  "nA",
                  "uA",
                  "mA",
                  "A"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"currentDetails"
      },
      "stageDetails":{
         "type":"object",
         "description":"describes the stage settings during a measurement. Properties: stageAlignmentDone (optional) - was stage alignment done? (true or false) of datatype boolean, tiltAngle (required) - angle by which the stage is tilted defined separately as angleDetails with the angle value, optional uncertainty, optional notes, optional qualifier and choice of units between degree and radian, eBeamWorkingDistance (required) - the distance at which the beam is focussed (when the sample is in focus, this will be the distance between the bottom end of the pole-piece of the objective lens and the sample) defined separately as distanceDetails, with the distance value, optional uncertainty, optional notes, optional qualifier and choice of units between nm, um, mm, cm and m",
         "additionalProperties":false,
         "properties":{
            "stageAlignmentDone":{
               "type":"boolean"
            },
            "tiltAngle":{
               "$ref":"#/$defs/angleDetails"
            },
            "eBeamWorkingDistance":{
               "$ref":"#/$defs/distanceDetails"
            }
         },
         "required":[
            "eBeamWorkingDistance",
            "tiltAngle"
         ],
         "title":"stageDetails"
      },
      "angleDetails":{
         "type":"object",
         "description":"describes an angle. Properties: value (required) - The angle expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (degree, radian; default value - degree) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"degree",
               "enum":[
                  "degree",
                  "radian"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"angleDetails"
      },
      "imagingDetails":{
         "type":"object",
         "description":"describes the imaging settings of the instrument during the measurement. Properties: isCorrelationImage (required) - Whether the image is used for correlating in xyz coordinates with another image? true or false. If true the coordinates have to be entered for the sake of correlative characterization of datatype boolean, coordinates (optional) - the xyz coordinates of a point expressed separately as coordinateSet which allows entering each of the xyz coordinates along with their optional uncertainties. If correllation images (two reference spots) are available, the coordinates enable correlative microscopy and they need to be entered, coordinateReference (optional) - description of the reference used for defining the coordinates (for eg. - origin at centre of sample, distances from two edges, etc.), numberOfPixels (required) - The number of x, y pixels of the image, defined separately as pixelNumberType with separate entries for integer values of xPixels and yPixels, pixelSize (required) - Physical x,y,z length imaged by a single pixel imaged by a single pixel, normally expressed in nm/pixel, defined separately as pixelSize3D for the mapping along x,y and z directions, with each pixel having a pixelSize, optional uncertainty, optional qualifier and optional notes. The y-pixel-size is to be given only if it is different from the x-pixel-size, and z-pixel-size can be ignored if it is greater than voxel size, collectionMethod (required) - the method of collection of the image, for e.g., normal scan, average of multiple images, integration of multiple images, default value - normal scan of datatype string, tiltCorrection (required) - the tilt correction type applied to the image to compensate for the tilting, for e.g., sample surface, cross-section, none or manual, default value- none of datatype string, apertureSetting (required) - The setting for controlling the aperture size, using either the aperture size (directly) or the beam current (indirectly). The element apertureSetting is defined separately as apertureSettingType which gives the option to choose between current or size. If the size can be set directly, then it is defined with the complex type distanceDetails, else if the aperture setting is controlled with the beam current defined separately as currentDetails, dwellTime (optional) - the dwell time of the beam per pixel, defined separately as  timeDetails, voxel (optional) - Size of the voxel in case 3D imaging is done for Energy-dispersive X-ray Spectroscopy or Electron-backscatter Diffraction, defined separately as voxelDetails",
         "additionalProperties":false,
         "properties":{
            "isCorrelationImage":{
               "type":"boolean"
            },
            "coordinates":{
               "$ref":"#/$defs/coordinateSet"
            },
            "coordinateReference":{
               "type":"string",
               "default":"origin at centre of sample"
            },
            "numberOfPixels":{
               "$ref":"#/$defs/pixelNumberType"
            },
            "pixelSize":{
               "$ref":"#/$defs/pixelsize3D"
            },
            "collectionMethod":{
               "type":"string",
               "default":"normal scan"
            },
            "tiltCorrection":{
               "type":"string",
               "default":"none"
            },
            "apertureSetting":{
               "$ref":"#/$defs/apertureSettingType"
            },
            "dwellTime":{
               "$ref":"#/$defs/timeDetails"
            },
            "voxel":{
               "$ref":"#/$defs/voxelDetails"
            }
         },
         "required":[
            "isCorrelationImage",
            "apertureSetting",
            "collectionMethod",
            "numberOfPixels",
            "pixelSize"
         ],
         "title":"imagingDetails"
      },
      "coordinateSet":{
         "type":"object",
         "description":"The set of xyz values describing a point of reference for correlative characterization. Properties: xValue (optional) - value of the x coordinate of datatype number, xUncertainty (optional) - uncertainty in the x value defined separately as uncertaintyDetails, yValue (optional) - value of the y coordinate of datatype number, yUncertainty (optional) -uncertainty in the y value defined separately as uncertaintyDetails, zValue (optional) - value of the zcoordinate of datatype number, zUncertainty (optional) -uncertainty in the z value defined separately as uncertaintyDetails, coordinatesUnit (optional) - unit of the coordinates (allowed units - nm, um, mm, cm, m)",
         "additionalProperties":false,
         "properties":{
            "xValue":{
               "type":"number",
               "default":-9999
            },
            "xUncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "yValue":{
               "type":"number",
               "default":-9999
            },
            "yUncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "zValue":{
               "type":"number",
               "default":-9999
            },
            "zUncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "coordinatesUnit":{
               "type":"string",
               "default":"um",
               "enum":[
                  "nm",
                  "um",
                  "mm",
                  "cm",
                  "m"
               ]
            }
         },
         "required":[
            "xValue",
            "yValue",
            "zValue",
            "coordinatesUnit"
         ]
      },
      "pixelNumberType":{
         "type":"object",
         "description":"describes the resolution of the image split into number of pixels in x and y directions. Properties: xPixels (required) - no. of pixels in horizontal direction of datatype number, yPixels (required) - no. of pixels in vertical direction of datatype number",
         "additionalProperties":false,
         "properties":{
            "xPixels":{
               "type":"number"
            },
            "yPixels":{
               "type":"number"
            }
         },
         "required":[
            "xPixels",
            "yPixels"
         ]
      },
      "apertureSettingType":{
         "type":"object",
         "description":"The setting for controlling the aperture size, using either the aperture size directly or indirectly using the beam current. Therefore one of the two properties must be selected: size or current. Properties: size (optional) - the size of the aperture which can be directly controlled using the instrument settings defined separately as distanceDetails OR current (optional) - the beam current setting which would indirectly control the size of the aperture defined separately as currentDetails",
         "additionalProperties":false,
         "properties":{
            "size":{
               "$ref":"#/$defs/distanceDetails"
            },
            "current":{
               "$ref":"#/$defs/currentDetails"
            }
         }
      },
      "pixelsize3D":{
         "type":"object",
         "description":"the distance on the sample imaged by a single pixel, normally expressed in nm/pixel, is expressed in 3D for the mapping along x,y and z directions. Properties: xPixelSize (required) -  distance on the sample covered by a pixel in the x direction defined separately as pixelSizeDetails, yPixelSize (optional) - distance on the sample covered by a pixel in the y direction defined separately as pixelSizeDetails; The y-pixel-size is to be given only if it is different from the x-pixel-size, zPixelSize (optional) - distance on the sample covered by a pixel in the z direction defined separately as pixelSizeDetails; The z-pixel-size can be ignored if it is greater than the voxel size.",
         "additionalProperties":false,
         "properties":{
            "xPixelSize":{
               "$ref":"#/$defs/pixelSizeDetails"
            },
            "yPixelSize":{
               "$ref":"#/$defs/pixelSizeDetails"
            },
            "zPixelSize":{
               "$ref":"#/$defs/pixelSizeDetails"
            }
         },
         "required":[
            "xPixelSize"
         ],
         "title":"pixelsize3D"
      },
      "pixelSizeDetails":{
         "type":"object",
         "description":"describes the size of a pixel. Properties: value (required) - The pixel-size expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value (default value - nm/pixel) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"nm/pixel"
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"pixelSizeDetails"
      },
      "timeDetails":{
         "type":"object",
         "description":"describes a time. Properties: value (required) - The time expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (ps, ns, us, ms, s default value - us) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"us",
               "enum":[
                  "ps",
                  "ns",
                  "us",
                  "ms",
                  "s"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"timeDetails"
      },
      "voxelDetails":{
         "type":"object",
         "description":"describes the size of a voxel. Properties: value (required) - The voxel-size expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined as a complex type uncertaintyDetails, which gives the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"mm"
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"voxelDetails"
      },
      "detectorSetDetails":{
         "type":"object",
         "description":"gives information about signal mixing between two detectors and provides the information about the detector(s). Properties: signalMixingDone (required) - whether the detector signals are mixed, true or false, of datatype boolean, signalmixingDescription (optional) - Describes the purpose and technique of signal mixing of datatype string, detector1 (required) - gives the settings of one detector defined separately as detectorDetails; entering the details of at least one detector is compulsory, detector2 (optional) - gives the settings of a second detector defined separately as detectorDetails",
         "additionalProperties":false,
         "properties":{
            "signalMixingDone":{
               "type":"boolean",
               "default":"false"
            },
            "signalMixingDescription":{
               "type":"string"
            },
            "detector1":{
               "$ref":"#/$defs/detectorDetails"
            },
            "detector2":{
               "$ref":"#/$defs/detectorDetails"
            }
         },
         "required":[
            "detector1",
            "signalMixingDone"
         ],
         "title":"detectorSetDetails"
      },
      "detectorDetails":{
         "type":"object",
         "description":"gives the settings of a detector. Properties: detectorType (required) - The type of detector (e.g., surface electron detection,  secondary electron, back-scattered electron) of datatype string, detectorName (required) -Name of the detector of datatype string, detectorID (optional) - Identifier for the detector, detectorManufacturer (optional) - describes the details of the detector (manufacturerName, modelName and detectorID) as part of manufacturerDetails, componentGeometry (optional) - xyz coordinates describing the position of the detector defined separately as coordinateSet, lastCalibration (optional) - date and time of last calibration (CCYY-MM-DDThh:mm:ss.sss) of the date-time format, detectorBias (optional) - bias voltage applied to the detector defined separately as voltageDetails. Allowed units nV, uV, mV, V, kV",
         "additionalProperties":false,
         "properties":{
            "detectorType":{
               "type":"string",
               "default":"Secondary Electron"
            },
            "detectorName":{
               "type":"string"
            },
            "detectorID":{
               "$ref":"#/$defs/identifier"
            },
            "detectorManufacturer":{
               "$ref":"#/$defs/manufacturerDetails"
            },
            "componentGeometry":{
               "$ref":"#/$defs/coordinateSet"
            },
            "lastCalibration":{
               "type":"string",
               "pattern":"(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z)"
            },
            "detectorBias":{
               "$ref":"#/$defs/voltageDetails"
            }
         },
         "required":[
            "detectorName",
            "detectorType"
         ],
         "title":"detectorDetails"
      },
      "eBeamDecelerationDetails":{
         "type":"object",
         "description":"Details about deceleration of the e- beam. Properties: landingEnergy (optional) - Landing energy of the e-beam defined separately as energyDetails (allowed units - meV, eV, keV, nJ, mJ, J, kJ, MJ), stageBias (optional) - Bias voltage applied to the stage defined separately biasDetails (allowed units - nV, uV, mV, V, kV, nA, uA, mA, A, kA)",
         "additionalProperties":false,
         "properties":{
            "landingEnergy":{
               "$ref":"#/$defs/energyDetails"
            },
            "stageBias":{
               "$ref":"#/$defs/voltageDetails"
            }
         }
      },
      "energyDetails":{
         "type":"object",
         "description":"describes an energy. Properties: value (required) - The energy expressed as an integer or floating point value of datatype number, unit (required) - the unit of the value to be selected from a controlled list (meV, eV, keV, MeV, nJ, mJ, J, kJ, MJ; default value - keV) of datatype string, qualifier (optional) - A qualifier to describe the value (e.g., avg, max, min; default value - max) of datatype string, uncertainty (optional) - Uncertainty in the value defined separately as uncertaintyDetails giving the option of choosing between an absolute uncertainty or relative uncertainty and entering the value of uncertainty as a number, notes (optional) - Further notes about the value of datatype string",
         "additionalProperties":false,
         "properties":{
            "value":{
               "type":"number",
               "default":-9999
            },
            "unit":{
               "type":"string",
               "default":"keV",
               "enum":[
                  "meV",
                  "eV",
                  "keV",
                  "MeV",
                  "nJ",
                  "mJ",
                  "J",
                  "kJ",
                  "MJ"
               ]
            },
            "qualifier":{
               "type":"string",
               "default":"max"
            },
            "uncertainty":{
               "$ref":"#/$defs/uncertaintyDetails"
            },
            "notes":{
               "type":"string"
            }
         },
         "required":[
            "unit",
            "value"
         ],
         "title":"energyDetails"
      },
      "FIBDetails":{
         "type":"object",
         "description":"Details about the focussed ion beam (FIB) extension if present. Properties: iBeamSource (required) - describes the details of the FIB source, defined separately as sourceDetails in which it is important to note the accelerating voltage and beam current of the i-beam, gunPressure (required) - pressure of the FIB gun, defined separately as pressureDetails (Allowed units Pa, hPa, kPa, MPa, GPa, mbar, bar, psi), gasInjectionSystem (optional) - Details about the gas injection system (GIS) defined separately as GISDetails, iBeamWorkingDistance (optional) - Working distance of the ion beam (i-beam) defined separately as distanceDetails - this value needs to be entered if the i-beam focus has to be set independently from the e-beam focus (Allowed units: nm, um, mm, cm, m), FIBSpotSize (optional) - spot size of the i-beam at the focus when the sample is in focus (also the spot size on the sample) defined separately as distanceDetails (Allowed units: nm, um, mm, cm, m), angleToEBeam (optional) - angle between e-beam and i-beam defined separately as angleDetails (Allowed units: degree, radian)",
         "additionalProperties":false,
         "properties":{
            "angleToEBeam":{
               "$ref":"#/$defs/angleDetails"
            },
            "iBeamSource":{
               "$ref":"#/$defs/sourceDetails"
            },
            "gunPressure":{
               "$ref":"#/$defs/pressureDetails"
            },
            "gasInjectionSystem":{
               "$ref":"#/$defs/GISDetails"
            },
            "iBeamWorkingDistance":{
               "$ref":"#/$defs/distanceDetails"
            },
            "FIBSpotSize":{
               "$ref":"#/$defs/distanceDetails"
            }
         },
         "required":[
            "gunPressure",
            "iBeamSource"
         ],
         "title":"FIBDetails"
      },
      "GISDetails":{
         "type":"object",
         "description":"gives the details of the gas injection system (GIS). Properties: GISName (optional) - Name of the GIS system of datatype string, beamDepositionType (optional) - type of beam deposition of datatype string to choose between e-beam deposition and i-beam deposition, depositionCurrent (optional) - the current used for performing beam deposition defined separately as currentDetails (Allowed units pA,nA,uA,mA,A), depositionSize (optional) - the size of the deposition defined separately as distanceDetails (Allowed units nm,um,mm,cm,m), depositionTime (optional) - total time for deposition defined separately as timeDetails (Allowed units ps,ns,us,ms,s)",
         "additionalProperties":false,
         "properties":{
            "GISName":{
               "type":"string"
            },
            "beamDepositionType":{
               "type":"string",
               "enum":[
                  "E-beam Deposition",
                  "I-beam Deposition"
               ]
            },
            "depositionCurrent":{
               "$ref":"#/$defs/currentDetails"
            },
            "depositionSize":{
               "$ref":"#/$defs/distanceDetails"
            },
            "depositionTime":{
               "$ref":"#/$defs/timeDetails"
            }
         },
         "title":"GISDetails"
      }
   }
}
